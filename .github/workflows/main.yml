name: 🚀 Deploy to EC2 (Auth Service)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: 🔄 Deploy via SSH
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 📦 Rsync project to EC2
        run: |
          rsync -avz --delete --exclude=node_modules --exclude='.git' ./ \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.DEPLOY_PATH }}-temp/

      - name: 🚀 Deploy and Restart Auth Service
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "🔁 Managing old deployment backup..."
            # Remove old backup if it exists
            if [ -d "${{ secrets.DEPLOY_PATH }}-old" ]; then
              echo "🗑️ Removing old backup..."
              rm -rf "${{ secrets.DEPLOY_PATH }}-old"
            fi

            # Backup current deployment if it exists
            if [ -d "${{ secrets.DEPLOY_PATH }}" ]; then
              echo "💾 Backing up current deployment..."
              mv "${{ secrets.DEPLOY_PATH }}" "${{ secrets.DEPLOY_PATH }}-old"
            fi

            # Move temp to main deployment
            echo "🔄 Activating new deployment..."
            mv "${{ secrets.DEPLOY_PATH }}-temp" "${{ secrets.DEPLOY_PATH }}"

            cd "${{ secrets.DEPLOY_PATH }}"

            echo "📝 Creating .env file..."
            echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > .env
            echo "SUPABASE_SERVICE_SECRET_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_SECRET_ROLE_KEY }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

            echo "📦 Installing dependencies..."
            npm install --omit=dev

            echo "🔨 Building project..."
            npx --yes nest build || npx --yes @nestjs/cli build

            echo "🚀 Restarting PM2..."
            pm2 restart ${{ secrets.PM2_PROCESS }} || pm2 start dist/src/main.js --name ${{ secrets.PM2_PROCESS }}
            pm2 save

            echo "📋 PM2 Logs:"
            pm2 logs ${{ secrets.PM2_PROCESS }} --lines 20 || echo "No logs yet"

            echo "✅ Deployment completed successfully!"
          EOF