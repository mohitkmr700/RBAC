name: 🚀 Deploy to Server (Auth Service)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: 🔄 Deploy via SSH
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: 🧹 Prepare target directory
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            mkdir -p /var/www/auth-service-temp
            rm -rf /var/www/auth-service-temp/*
          EOF

      - name: 📦 Upload project to server
        run: |
          rsync -avz --delete --exclude=node_modules --exclude='.git' ./ \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/var/www/auth-service-temp/

      - name: 🚀 Deploy & Restart PM2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
            set -e

            echo "🗃️ Backing up old deployment (if any)..."
            rm -rf /var/www/auth-service-old || true
            mv /var/www/auth-service /var/www/auth-service-old || true
            mv /var/www/auth-service-temp /var/www/auth-service

            cd /var/www/auth-service

            echo "🔐 Writing environment variables..."
            cat <<EOT > .env
            SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            SUPABASE_SERVICE_SECRET_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_SECRET_ROLE_KEY }}
            PORT=${{ secrets.PORT }}
            CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            EOT

                        echo "📦 Installing dependencies..."
                        npm install --omit=dev

                        echo "🔨 Building the project..."
                        npm run build

                        echo "🚀 Restarting with PM2..."
                        pm2 restart auth-service || pm2 start dist/src/main.js --name auth-service
                        pm2 save
                      EOF
