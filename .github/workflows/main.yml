name: 🚀 Deploy to Server (Auth Service)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: 🔄 Deploy via SSH
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: 🛠️ Copy files to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            rm -rf /var/www/auth-service-temp || true
            mkdir -p /var/www/auth-service-temp
          EOF

          rsync -avz --exclude=node_modules --exclude='.git' ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/var/www/auth-service-temp/

      - name: 🚀 Install, Set Env, Build and Restart PM2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            # Move updated code
            rm -rf /var/www/auth-service-old || true
            mv /var/www/auth-service /var/www/auth-service-old || true
            mv /var/www/auth-service-temp /var/www/auth-service

            cd /var/www/auth-service

            # Set environment variables
            echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > .env
            echo "SUPABASE_SERVICE_SECRET_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_SECRET_ROLE_KEY }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}" >> .env

            # Install dependencies
            npm install --omit=dev

            # Build the project
            npm run build

            # Restart PM2
            pm2 restart auth-service || pm2 start dist/src/main.js --name auth-service
            pm2 save
          EOF
